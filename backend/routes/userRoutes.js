const express = require('express');
const router = express.Router();
const User = require('../models/User');

// ‚ûï Cr√©er un nouvel utilisateur
router.post('/', async (req, res) => {
  try {
    const newUser = new User(req.body);
    await newUser.save();
    res.status(201).json(newUser);
  } catch (err) {
    res.status(400).json({ error: err.message });
  }
});

// üìÑ R√©cup√©rer tous les utilisateurs
router.get('/', async (req, res) => {
  try {
    const users = await User.find();
    res.json(users);
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
});

// üîç R√©cup√©rer un utilisateur par ID
router.get('/:id', async (req, res) => {
  try {
    const user = await User.findById(req.params.id);
    if (!user) return res.status(404).json({ error: 'Utilisateur non trouv√©' });
    res.json(user);
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
});

// ‚úèÔ∏è Mettre √† jour un utilisateur
router.put('/:id', async (req, res) => {
  try {
    const user = await User.findByIdAndUpdate(req.params.id, req.body, { new: true });
    res.json(user);
  } catch (err) {
    res.status(400).json({ error: err.message });
  }
});

// ‚ùå Supprimer un utilisateur
router.delete('/:id', async (req, res) => {
  try {
    await User.findByIdAndDelete(req.params.id);
    res.json({ message: 'Utilisateur supprim√©' });
  } catch (err) {
    res.status(500).json({ error: err.message });
  }
});

module.exports = router;
